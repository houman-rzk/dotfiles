#!/bin/sh

# Jflex lib directory path variable (should be set to your /path/to/jflex/lib/ directory)
JFLEXLIB="$XDG_DATA_HOME/jflex-1.8.2/lib"

# Java-cup jar file variable (should be set to your /path/to/java-cup.jar file)
JAVACUPJAR="$JFLEXLIB/java-cup-11b.jar"


# Function definitions
jflexRun() {
    LOGFILE=/tmp/jflex.log
    
    jflex "$jflexFile" > $LOGFILE || { cat $LOGFILE && rm $LOGFILE > /dev/null 2>&1 && exit 1 ;}
    
    output="$(tail -n 1 $LOGFILE | cut -d '"' -f 2 | sed 's/.java//g')"
    
    rm $LOGFILE > /dev/null 2>&1
    
    javac "$output.java" || { echo "ERROR: Error in compiling the file" && exit 1 ;}
    #javac "$output.java" -cp ~/.local/share/jflex-1.8.2/lib/java-cup-11b.jar || { echo "ERROR: Error in compiling the file" && exit 1 ;}
    
    # Run
    java "$output" "$sourceFile" || { echo "ERROR: Error in execution" && exit 1 ;}
    
    # Cleanup
    rm "$output"*.java* > /dev/null 2>&1 ; rm "$output"*.class* > /dev/null 2>&1
}

jflexCupsRun() {
    LOGFILE=/tmp/jflex-java-cup.log
    
    jflex "$jflexFile" > $LOGFILE || { cat $LOGFILE && rm $LOGFILE > /dev/null 2>&1 && exit 1 ;}

    jflexOutput="$(tail -n 1 $LOGFILE | cut -d '"' -f 2)"

    java -jar "$JAVACUPJAR" "$cupFile" > $LOGFILE 2>&1 || { cat $LOGFILE && rm $LOGFILE > /dev/null 2>&1 && exit 1 ;}

    grep -o --color=never '[[:alnum:]]*.java' "$LOGFILE" > files

    symFile="$(grep -oi --color=never 'sy[[:alnum:]]*.java' files)"

    javac "$symFile" > $LOGFILE || { cat $LOGFILE && rm $LOGFILE > /dev/null 2>&1 && exit 1 ;}

    javac "$jflexOutput" -cp "$JFLEXLIB":. > $LOGFILE || { cat $LOGFILE && rm $LOGFILE > /dev/null 2>&1 && exit 1 ;}

    while read -r f ; do
        javac "$f" -cp "$JFLEXLIB":. > $LOGFILE || { cat $LOGFILE && rm $LOGFILE > /dev/null 2>&1 && exit 1 ;}
        [ "$f" != "$symFile" ] && executable="$(echo "$f" | cut -d '.' -f 1)"
    done < files

    # Run
    java -cp "$JFLEXLIB":. "$executable" "$sourceFile" || { echo "ERROR: Error in execution" && exit 1 ;}

    # Cleanup
    rm ./*.java* > /dev/null 2>&1 ; rm ./*.class* > /dev/null 2>&1 ; rm files > /dev/null 2>&1
}


printHelp() {
    scriptName="$(echo "$0" | rev | cut -d '/' -f 1 | rev)"
    printf "Usage: %s [OPTIONS]\n\n" "$scriptName"
    printf "%s options:\n" "$scriptName"
    echo "    -h          Print this help message.
    -j <file>   Uses <file> as jflex specification file.
    -s <file>   Uses <file> as source code file.
    -c <file>   (Optional) Uses <file> as java-cup specification file.
    -l <dir>    (Optional) Path to library that jflex should use. Multiple libraries can be specified by separating them with ':' (as in <dir>:<dir>).

    Notes: 
    - To use java-cup you must have the 'java-cup-VERSION.jar' and java-cup-runtime-VERSION.jar' files in your /path/to/jflex/lib/ directory (you can set it using the 'JFLEXLIB' variable found in this script's source or by using the '-l' option."
}


# The actual script
optstring=":hj:s:c:"

while getopts $optstring opt ; do
    case $opt in
        h) printHelp ; exit 0 ;;
        c) cupFile="$OPTARG" ;;
        j) jflexFile="$OPTARG" ;;
        s) sourceFile="$OPTARG" ;;
        l) JFLEXLIB="$OPTARG" ;;
        \?) echo "ERROR - Unknown option '-$OPTARG'" && exit 1 ;;
    esac
done ;

[ -z "$jflexFile" ] && echo "ERROR - Missing jflex specification file (-j file)" && exit 1
[ -z "$sourceFile" ] && echo "ERROR - Missing source file (-s file)" && exit 1

if [ -z "$cupFile" ] ; then
    jflexRun
else
    jflexCupsRun
fi
