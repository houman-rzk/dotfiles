#!/bin/sh

# MUST EXECUTE 'PRAGMA FOREIGN_KEYS = ON;' along every update sentence. E.g: "PRAGMA FOREIGN_KEYS=ON; INSERT INTO Table(id, name) VALUES (1, 'name')"
# Add faster sync option for getting videos

database="./yt.db"
#downloadIncrement=50
downloadIncrement=10

fileSuffix="/tmp/yt-"

getChannelLatestNVideos() {
    channelId=$1
    nVideos=$2
    echo "GETTING LAST $nVideos VIDEOS"

    channelUrl="https://youtube.com/channel/$channelId"
    #channelUrl="https://youtube.com/channel/$(echo "SELECT url FROM Channel WHERE id = $channelId" | sqlite3 "$database")"

    #if [ "$(echo "SELECT COUNT(*) FROM Video WHERE channelId = '$channelId'" | sqlite3 "$database")" -ne 0 ]
    #then
        #maxDownloads="--max-downloads $nVideos"
    #fi

    yt-dlp --max-downloads "$nVideos" --get-title --get-id "$channelUrl" > "$fileSuffix$channelId"
}

checkLastNChannelVideos() {
    channelId=$1
    tried=$2
    lineCount="$(wc -l "$fileSuffix$channelId" | awk '{print $1}')"
    videosInFile="$((lineCount / 2))"

    # tried can never be < videosInFile
    if [ "$tried" -eq $videosInFile ]
    then
        ret=1
    else
        ret=0
    fi

    return $ret
    #videosInDatabse=0

    #while read -r title
    #    read -r id && [ "$(echo "SELECT * FROM Video WHERE videoId = '$id'" | sqlite3 "$database")" != "" ]
    #do
    #    videosInDatabse=$((videosInDatabse + 1))
    #done < "$fileSuffix$channelId"

    #echo "TRIED = $tried"
    #echo "INFILE = $videosInFile"
    #if [ $tried -eq $videosInFile ] && [ $videosInFile -ge $videosInDatabse ]
    #then
    #    ret=1
    #elif [ $tried -gt $videosInFile ]
    #then
    #    ret=0
    #else
    #    echo "OTHER CASE: tried=$tried, file=$videosInFile, database=$videosInDatabse"
    #    echo "RETURNING $ret"
    #    ret=1
    #fi

    #return $ret
}

getNewChannelVideos() {
    channelId=$1
    n=$downloadIncrement

    getChannelLatestNVideos "$channelId" $n
    
    while checkLastNChannelVideos "$channelId" $n ; ret=$? && [ $ret -ne 0 ]
    do
        n=$((n + downloadIncrement))
        getChannelLatestNVideos "$channelId" $n
    done
}

invertChannelVideosFile() {
    channelId=$1
    file="$fileSuffix$channelId"
    invFile="$file.inv"

    tac "$file" > "$invFile"
    mv "$invFile" "$file"
}

addNewChannelVideosToDatabase() {
    channelId=$1
    file="$fileSuffix$channelId"

    [ "$(echo "SELECT * FROM Channel WHERE channelId = '$channelId'" | sqlite3 "$database")" = "" ] && addChannelToDatabase "$channelId"

    while read -r id; read -r title
    do
        title="$(echo "$title" | sed "s/'/''/g")"

        echo "PRAGMA FOREIGN_KEYS=ON; INSERT INTO Video(videoId, channelId, title) VALUES ('$id', '$channelId', '$title')" | sqlite3 "$database"
    done < "$fileSuffix$channelId"
}

syncChannelVideos() {
    channelId=$1
    getNewChannelVideos "$channelId"
    invertChannelVideosFile "$channelId"
    addNewChannelVideosToDatabase "$channelId"
    echo "DONE"
}

addChannelToDatabase() {
    channelId=$1

    channelName="$(yt-dlp --get-filename --max-downloads 1 "https://youtube.com/channel/$channelId" -o "%(channel)s")"

    echo "PRAGMA FOREIGN_KEYS=ON; INSERT INTO Channel(channelId, name) VALUES ('$channelId', '$channelName')" | sqlite3 "$database"
}

#searchForChannel() {
#    search="$1"
#    p1="yt-dlp --get-filename --match-filters channel~='(?i)"
#    p2="$search"
#    p3="' ytsearch10:\""
#    p4="$search"
#    p5="\" -o \"%(channel)s %(channel_follower_count)s %(channel_id)s\""
#    cmd="$p1$p2$p3$p4$p5"
#    echo $cmd
#    eval "yt-dlp --get-filename --match-filters channel~='(?i)$search' ytsearch10:"$search" -o "%(channel)s %(channel_follower_count)s %(channel_id)s""
#    echo "'$search'"
#    #cmd="$(printf "yt-dlp --get-filename --match-filters channel~='(?i)%s' ytsearch10:%s" "$search, $search")"
#
#    #cmd="$(printf "yt-dlp --get-filename --match-filters channel~='(?i)%s' ytsearch10:\"%s\" -o \"\\%(channel)s %(channel_follower_count)s %(channel_id)s" "$search")"
#}


searchForChannel() {
    query="$(echo "$1" | sed 's/ /+/g')"
    
    curl -s "https://www.youtube.com/results?search_query=$query" > "${fileSuffix}Search.raw"
    
    tr "," "\n" < "${fileSuffix}Search.raw" > "${fileSuffix}Search.sep"
    
    line="$(grep "channelId.*" -on --color=never < "${fileSuffix}Search.sep" | cut -d ':' -f 1)"
    
    linep1=$((line +1))
    
    sed "${line},${linep1}p;d" "${fileSuffix}Search.sep" | rev | cut -d ':' -f 1 | rev | grep -o --color=never "\".*\"" | sed -e 's/\"//g' > "${fileSuffix}Search.info"
    
    channelId="$(sed '1p;d' "${fileSuffix}Search.info")"
    channelName="$(sed '2p;d' "${fileSuffix}Search.info")"

    echo "$channelId" > "${fileSuffix}Search.result"
    echo "$channelName" >> "${fileSuffix}Search.result"

    #cat "${fileSuffix}Search.result"
}

getSearchedChannelId() {
    channelName=$1
    file="${fileSuffix}Search.result"

    line="$(grep "$channelName" -on --color=never < "$file" | cut -d ':' -f 1)"
    l=$((line - 1))

    channelId="$(sed "${l}p;d" "$file")"
    echo "$channelId"
}



#c="UCJvQsqYSRId8s4dp_n76Rjg"
#syncChannelVideos "$c"

# TO VIEW LATEST FIRST
#select *,rowid from video order by rowid desc;

#yt-dlp --get-filename --match-filters channel~='(?i)rubén gisbert' ytsearch10:"ruben gisbert" -o "%(channel)s %(channel_follower_count)s %(channel_id)s"

#ESTE NO VA POR EL ACENTO
#yt-dlp --get-filename --match-filters channel~='(?i)rubén gisbert' ytsearch10:"rubén gisbert" -o "%(channel)s %(channel_follower_count)s %(channel_id)s"


searchForChannel "ruben gisbert" # This will set channelName
getSearchedChannelId "$channelName"
